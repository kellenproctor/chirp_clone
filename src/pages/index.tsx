import { SignInButton, SignOutButton, UserButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { type RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-4 border-y-2 border-slate-400 p-4">
      <img src={user.profileImageUrl} alt="Your profile image" className="h-16 w-16 rounded-full" />
      <input
        type="text"
        placeholder="Type some emojis!"
        className="grow rounded-md bg-transparent pl-4 text-4xl outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  return (
    <div className="relative mb-2 rounded-md border-4 bg-gray-400 p-4 pt-1 text-center text-3xl">
      <div className="absolute -left-5 -top-5">
        <img
          src={props.author?.profileImageUrl}
          alt="Post author profile image"
          className="h-10 w-10 rounded-full border-2"
        />
      </div>
      <div className="pl-2 text-xs">{`@${props.author.username}`}</div>
      <div className="pb-2">{props.post.content}</div>
      <div className="absolute bottom-1 right-1 text-xs">{dayjs(props.post.createdAt).fromNow()}</div>
    </div>
  );
};

const Home: NextPage = () => {
  // Clerk user
  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();
  // const { data, isLoading } = {data: [], isLoading: true};

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto flex w-screen flex-col items-center bg-stone-800 md:max-w-2xl lg:max-w-4xl">
        <div className="flex w-full justify-end px-8 py-4">
          {!user.isSignedIn ? (
            <SignInButton />
          ) : (
            <div className="flex gap-4 rounded-md border-b-4 border-b-slate-400 p-3">
              <UserButton />
              <SignOutButton />
            </div>
          )}
        </div>
        <CreatePostWizard />
        <div className="flex min-h-screen flex-col justify-center">
          {isLoading && <div className="m-auto h-1/2 w-full animate-ping text-center">ðŸ¥³ðŸ¥³ðŸ¥³</div>}
          {data?.map((fullPost) => (
            <PostView key={fullPost.post.authorId} {...fullPost} />
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;
